<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
                    http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context.xsd
                    http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/tx
                    http://www.springframework.org/schema/tx/spring-tx.xsd
                    http://www.springframework.org/schema/aop
                    http://www.springframework.org/schema/aop/spring-aop.xsd">
<!--  引入外部的属性文件  -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

<!--  配置连接池  -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

<!--  配置Hibernate相关属性  -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--  注入连接池  -->
        <property name="dataSource" ref="dataSource"/>
        <!--  配置Hibernate属性  -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <!--  加载Hibernate中的映射文件  -->
        <property name="mappingResources">
            <list>
                <value>com/ssh/domain/Product.hbm.xml</value>
                <value>com/ssh/domain/Department.hbm.xml</value>
                <value>com/ssh/domain/Employee.hbm.xml</value>
            </list>
        </property>
    </bean>

<!--  配置Action类  -->
    <bean name="productAction" class="com.ssh.action.ProductAction" scope="prototype">
        <!--  手动注入Service  -->
        <property name="productService" ref="productService" />
    </bean>
    <bean id="employeeAction" class="com.ssh.action.EmployeeAction" scope="prototype">
        <property name="employeeService" ref="employeeService"/>
        <property name="departmentService" ref="departmentService"/>
    </bean>
    <bean id="departmentAction" class="com.ssh.action.DepartmentAction" scope="prototype">
        <property name="departmentService" ref="departmentService"/>
    </bean>

<!--  配置业务层的类  -->
    <bean id="productService" class="com.ssh.service.ProductService">
        <property name="productDao" ref="productDao" />
    </bean>
    <bean id="employeeService" class="com.ssh.service.impl.EmployeeServiceImpl">
        <property name="employeeDao" ref="employeeDao"/>
    </bean>
    <bean id="departmentService" class="com.ssh.service.impl.DepartmentServiceImpl">
        <property name="departmentDao" ref="departmentDao"/>
    </bean>

<!--  配置Dao的类  -->
    <bean id="productDao" class="com.ssh.dao.ProductDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="employeeDao" class="com.ssh.dao.impl.EmployeeDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="departmentDao" class="com.ssh.dao.impl.DepartmentDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

<!--  配置事务管理器  -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

<!--  开启注解事务  -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>